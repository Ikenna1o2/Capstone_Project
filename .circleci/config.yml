version: 2.1
            
jobs:
  linting-old:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [linting]
      - run:
            name: install dependencies
            command: |
              wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
              chmod +x ./hadolint
      - run:
          name: lint check 1
          command: |
            npm install --save-dev htmlhint
            npx htmlhint "**/*.html"
      - run:
          name: lint check 2
          command: |
            ./hadolint ./app/Dockerfile
      - save_cache:
          paths: [node_modules]
          key: linting

  build-image-old:
      docker:
        - image: circleci/golang:1.15
          auth:
            username: ikenna1o2
            password: $DOCKERHUB_PASSWORD  
      steps:
        - checkout
        - setup_remote_docker:
            version: 19.03.13
        - run:
            name: build and push docker image
            command: |
              cd app
              docker build --tag=preappimage .
              echo $DOCKERHUB_PASSWORD | docker login -u ikenna1o2 --password-stdin
              docker tag preappimage ikenna1o2/preappimage
              docker push ikenna1o2/preappimage
  linting-new:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [linting-2]
      - run:
            name: install dependencies
            command: |
              wget -O ./hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
              chmod +x ./hadolint
      - run:
          name: lint check 1
          command: |
            npm install --save-dev htmlhint
            npx htmlhint "**/*.html"
      - run:
          name: lint check 2
          command: |
            ./hadolint ./newapp/Dockerfile
      - save_cache:
          paths: [node_modules]
          key: linting-2

  build-image-new:
      docker:
        - image: circleci/golang:1.15
          auth:
            username: ikenna1o2
            password: $DOCKERHUB_PASSWORD  
      steps:
        - checkout
        - setup_remote_docker:
            version: 19.03.13
        - run:
            name: build and push docker image
            command: |
              cd newapp
              docker build --tag=finalappimage .
              echo $DOCKERHUB_PASSWORD | docker login -u ikenna1o2 --password-stdin
              docker tag finalappimage ikenna1o2/finalappimage
              docker push ikenna1o2/finalappimage
  
  deployment:
      docker:
        # Docker image here that supports AWS CLI
        - image: amazon/aws-cli
      steps:
        # Checkout code from git
        - checkout
        - run:
            name: deploy old app
            command: |
              # install kubectl
              curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/kubectl
              chmod +x ./kubectl
              mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
              echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
              
              # configure kubectl
              aws eks update-kubeconfig --region us-east-1
                            
              # test kubectl
              kubectl version
              # get services
              kubectl get svc
              # change directory
              cd kube
              # create a deployment
              kubectl apply -f deploy.yml
              # create a service 
              kubectl apply -f service.yml
              sleep 3m
              
              # get services after
              kubectl get svc
            no_output_timeout: 30m
  
  rolling-update:
      docker:
        # Docker image here that supports AWS CLI
        - image: amazon/aws-cli
      steps:
        # Checkout code from git
        - checkout
        - run:
            name: deploy newapp by rolling update
            command: |
              # install kubectl
              curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/kubectl
              chmod +x ./kubectl
              mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
              echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
              
              # configure kubectl
              aws eks update-kubeconfig --region us-east-1
                           
              # test kubectl
              kubectl version
              # get services before
              kubectl get svc
              # change directory
              cd kube
              # update app to version2
              # do a rolling update based on update strategy
              kubectl apply -f newapp.yml
              sleep 3m
              # get services after
              kubectl get svc
            no_output_timeout: 30m
        
workflows:
  default:
    jobs:
      - linting-old
      - build-image-old:
          requires: [linting-old]
      - linting-new:
          requires: [build-image-old]
      - build-image-new:
          requires: [linting-new]
      - deployment:
          requires: [build-image-new]
      - rolling-update:
          requires: [deployment]
